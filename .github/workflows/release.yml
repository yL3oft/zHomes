name: Release Version

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Compile and Test with Maven
        run: mvn clean install -DskipTests=false -Dgpg.skip=true

      - name: Get project version
        id: get_version
        run: |
          VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Get final JAR name
        id: get_jar
        run: |
          JAR_FILE=$(mvn help:evaluate -Dexpression=project.build.finalName -q -DforceStdout).jar
          echo "jar=$JAR_FILE" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          name: zHomes ${{ steps.get_version.outputs.version }}
          body_path: changelog.md
          files: target/${{ steps.get_jar.outputs.jar }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to Modrinth (using curl)
        env:
          MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
        run: |
          set -e
          curl --fail -v -X POST "https://api.modrinth.com/v2/version" \
            -H "Authorization: $MODRINTH_TOKEN" \
            -F "project_id=veAp6a0M" \
            -F "version_number=${{ steps.get_version.outputs.version }}" \
            -F "version_type=release" \
            -F "changelog=@changelog.md" \
            -F "file=@target/${{ steps.get_jar.outputs.jar }}" \
            -F "loaders[]=folia" \
            -F "loaders[]=paper" \
            -F "loaders[]=purpur" \
            -F "loaders[]=spigot" \
            $(for v in 1.8{,.1,.2,.3,.4,.5,.6,.7,.8} \
                       1.9{,.1,.2} \
                       1.10{,.1,.2} \
                       1.11{,.1,.2} \
                       1.12{,.1,.2} \
                       1.13{,.1,.2} \
                       1.14{,.1,.2,.3,.4} \
                       1.15{,.1,.2} \
                       1.16{,.1,.2,.3,.4,.5} \
                       1.17{,.1} \
                       1.18{,.1,.2} \
                       1.19{,.1,.2,.3,.4} \
                       1.20{,.1,.2} \
                       1.21{,.1,.2,.3,.4,.5,.6,.7,.8}; do \
                 echo -n "-F game_versions[]=$v "; \
             done)